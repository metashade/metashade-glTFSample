# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pygltflib pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - uses: robinraju/release-downloader@v1.10
      with:
        repository: microsoft/DirectXShaderCompiler
        extract: true
        tag: v1.8.2407
        fileName: dxc_2024_07_31.zip
        out-file-path: '.dxc'
    - uses: robinraju/release-downloader@v1.10
      with:
        repository: KhronosGroup/glslang
        extract: true
        tag: main-tot
        fileName: glslang-master-windows-Release.zip
        out-file-path: '.glslang'
    - name: Print the directory tree
      run: |
        pwd
        tree /F
    - name: Configure the environment for tests
      run: |
        Add-Content $env:GITHUB_PATH $env:GITHUB_WORKSPACE\.dxc\bin\x64
        Add-Content $env:GITHUB_PATH $env:GITHUB_WORKSPACE\.glslang\bin
        Add-Content $env:GITHUB_ENV METASHADE_PYTEST_OUT_DIR=$env:GITHUB_WORKSPACE/tests/out
    - name: Test with pytest
      run: |
        pytest -rP tests
    - name: Print the directory tree
      run: |
        pwd
        tree /F
